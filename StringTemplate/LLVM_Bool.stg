bool_global_variable(id) ::= <<
<vglobal(id)> = private unnamed_addr global i1 0
>>

bool_type() ::= <<
i1
>>

bool_literal(id, val) ::= <<
  <vlocal_result(id)> = add i1 <val>, 0
>>

bool_and(lhs, lhs_id, rhs, rhs_id, id) ::= <<
  <lhs>
  <rhs>
  ***<vlocal_result(id)> = add i32 <vlocal_result(lhs_id)>, <vlocal_result(rhs_id)>
>>

bool_or(lhs, lhs_id, rhs, rhs_id, id) ::= <<
  <lhs>
  <rhs>
  ***<vlocal_result(id)> = sub i32 <vlocal_result(lhs_id)>, <vlocal_result(rhs_id)>
>>

bool_xor(lhs, lhs_id, rhs, rhs_id, id) ::= <<
  <lhs>
  <rhs>
  <vlocal_result(id)> = icmp ne i1 <vlocal_result(lhs_id)>, <vlocal_result(rhs_id)>
>>

bool_eq(lhs, lhs_id, rhs, rhs_id, id) ::= <<
  <lhs>
  <rhs>
  <vlocal_result(id)> = icmp eq i1 <vlocal_result(lhs_id)>, <vlocal_result(rhs_id)>
>>

bool_ne(lhs, lhs_id, rhs, rhs_id, id) ::= <<
  <lhs>
  <rhs>
  <vlocal_result(id)> = icmp ne i1 <vlocal_result(lhs_id)>, <vlocal_result(rhs_id)>
>>
