(PROGRAM (FUNCTION_DECL integer times_two (ARG_DECL const integer x) (EXPR (* 2 x))) (FUNCTION_DECL integer f (EXPR 1)) (FUNCTION_DECL real pythag (ARG_DECL const real a) (ARG_DECL const real b) (EXPR (^ (EXPR (+ (^ a 2) (^ b 2))) (EXPR (/ 1 2))))) (FUNCTION_DECL real get (ARG_DECL const real a) (ARG_DECL const integer i) (EXPR (+ a i))) (FUNCTION_DECL integer g (ARG_DECL const boolean b) (BLOCK (if (EXPR b) (BLOCK (return (EXPR 3))) (BLOCK (return (EXPR 8)))))) (VAR_DECL const integer value (EXPR (CALL times_two (ELIST (EXPR 4))))) (FUNCTION_DECL integer times_two (ARG_DECL const integer x) (EXPR (* 2 x))) (FUNCTION_DECL integer nobodyKnowsWhatIDo (ARG_DECL const (tuple (FIELD_DECL var integer) (FIELD_DECL var real)) t) (EXPR 1)) (VAR_DECL const integer magicalReturnValue (EXPR (CALL nobodyKnowsWhatIDo (ELIST (EXPR (TUPLE_LIST (EXPR 5) (EXPR 1.1))))))) (VAR_DECL const integer r2 (EXPR (CALL f (ELIST (EXPR (TUPLE_LIST (EXPR 5) (EXPR 1.1))) (EXPR (TUPLE_LIST (EXPR 5) (EXPR 1.1))))))) (FUNCTION_DECL real get (ARG_DECL const (tuple (FIELD_DECL var integer) (FIELD_DECL var real)) a) (ARG_DECL const integer i) (EXPR (. a 1))) (FUNCTION_DECL (tuple (FIELD_DECL var character) (FIELD_DECL var character)) f (EXPR (TUPLE_LIST (EXPR 'a') (EXPR 'b')))))